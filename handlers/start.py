import os

from aiogram import Router
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import (BufferedInputFile, CallbackQuery,
                           InlineKeyboardButton, InlineKeyboardMarkup, Message)

from bot import bot
from config import (ADMIN_ID, CHANNEL_URL, 
                    SUPPORT_CHAT_URL)

router = Router()

class FeedbackState(StatesGroup):
    waiting_for_feedback = State()

async def send_welcome_message(chat_id: int):
    # –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    welcome_text = (
        "*SoloNet ‚Äî –≤–∞—à –¥–æ—Å—Ç—É–ø –≤ —Å–≤–æ–±–æ–¥–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç! üåê‚ú®*\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π VPN, –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –≤–∞—à—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–∂–µ –≤ —Å–∞–º—ã—Ö —Å—Ç—Ä–æ–≥–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö. üîíüöÄ\n\n"
        "*ver. 1.0*"
    )

    # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    image_path = os.path.join(os.path.dirname(__file__), 'pic.jpg')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if not os.path.isfile(image_path):
        await bot.send_message(chat_id, "–§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    # –°–æ–∑–¥–∞–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    inline_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data='view_profile')],
        [InlineKeyboardButton(text='üîí –û VPN', callback_data='about_vpn')],
        [InlineKeyboardButton(text='üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url=SUPPORT_CHAT_URL)],  # –ò–∑–º–µ–Ω–∏–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ü–æ–¥–¥–µ—Ä–∂–∫–∞
        [InlineKeyboardButton(text='üì¢ –ù–∞—à –∫–∞–Ω–∞–ª', url=CHANNEL_URL)]
    ])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    with open(image_path, 'rb') as image_from_buffer:
        await bot.send_photo(
            chat_id,
            BufferedInputFile(image_from_buffer.read(), filename="pic.jpg"),
            caption=welcome_text,
            parse_mode='Markdown',
            reply_markup=inline_keyboard  # Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        )

@router.message(Command('start'))
async def start_command(message: Message):
    await send_welcome_message(message.chat.id)

@router.callback_query(lambda c: c.data == 'about_vpn')
async def handle_about_vpn(callback_query: CallbackQuery):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await callback_query.message.delete()

    info_message = (
        "*–û VPN*\n\n"
        "–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—Å–æ–∫–æ—Å–∫–æ—Ä–æ—Å—Ç–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –≤ —Ä–∞–∑–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏—è—Ö –∏ –≤—ã–¥–∞—ë–º –∫–ª—é—á –∫–∞–∂–¥–æ–º—É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ. "
        "–¢–∞–∫–∂–µ –º—ã –ø—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤–µ–π—à–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n"
        "<b>–í–∞—à –∫–ª—é—á ‚Äî –≤–∞—à–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å! –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Å–≤–æ—ë —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º –ª–∏—Ü–∞–º.</b>"
    )

    
    button_back = InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='back_to_menu')
    inline_keyboard_back = InlineKeyboardMarkup(inline_keyboard=[[button_back]])

    await callback_query.message.answer(
        info_message,
        parse_mode='HTML',
        reply_markup=inline_keyboard_back
    )
    await callback_query.answer()

@router.callback_query(lambda c: c.data == 'back_to_menu')
async def handle_back_to_menu(callback_query: CallbackQuery):
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback_query.message.delete()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await send_welcome_message(callback_query.from_user.id)
    await callback_query.answer()
