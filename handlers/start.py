from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery, Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from config import ADMIN_ID, CHANNEL_URL
from bot import bot  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ bot –∏ dp –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –º–µ—Å—Ç–∞

router = Router()

class FeedbackState(StatesGroup):
    waiting_for_feedback = State()

async def start_command(message: types.Message):
    welcome_text = (
        "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å!*\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏:\n\n"
        "üîë *–°–æ–∑–¥–∞—Ç—å –∫–ª—é—á –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN* - –ü–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ VPN.\n"
        "üìÖ *–£–∑–Ω–∞—Ç—å –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–ª—é—á–∞* - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∫–æ–≥–¥–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤–∞—à–µ–≥–æ –∫–ª—é—á–∞.\n"
        "üë§ *–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å* - –ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –∏ –±–∞–ª–∞–Ω—Å–µ.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"
    )

    button_view_profile = InlineKeyboardButton(text='üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data='view_profile')
    button_about_vpn = InlineKeyboardButton(text='üîí –û VPN', callback_data='about_vpn')
    button_feedback = InlineKeyboardButton(text='üìù –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', callback_data='feedback')
    button_channel = InlineKeyboardButton(text='üì¢ –ù–∞—à –∫–∞–Ω–∞–ª', url=CHANNEL_URL)

    inline_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [button_view_profile],
        [button_about_vpn],
        [button_feedback],
        [button_channel]
    ])

    reply_keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ú–µ–Ω—é")],
        #    [KeyboardButton(text="–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")]
        ],
        resize_keyboard=True
    )

    await message.bot.send_message(
        chat_id=message.chat.id,
        text=welcome_text,
        parse_mode='Markdown',
        reply_markup=inline_keyboard
    )
    
    await message.bot.send_message(
        chat_id=message.chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_keyboard
    )

@router.callback_query(lambda c: c.data == 'about_vpn')
async def handle_about_vpn(callback_query: CallbackQuery):
    info_message = (
        "*–û VPN*\n\n"
        "–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º VLESS –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. "
        "–ö–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. "
        "–≠—Ç–æ—Ç –∫–ª—é—á –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—à–µ–≥–æ VPN-—Å–µ—Ä–≤–∏—Å–∞."
    )
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    button_back = InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='back_to_menu')

    # –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    inline_keyboard_back = InlineKeyboardMarkup(inline_keyboard=[
        [button_back]
    ])

    await callback_query.message.edit_text(
        info_message,
        parse_mode='Markdown',
        reply_markup=inline_keyboard_back  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    )
    await callback_query.answer()

@router.callback_query(lambda c: c.data == 'back_to_menu')
async def handle_back_to_menu(callback_query: CallbackQuery):
    welcome_text = (
        "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å!*\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏:\n\n"
        "üîë *–°–æ–∑–¥–∞—Ç—å –∫–ª—é—á –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN* - –ü–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ VPN.\n"
        "üìÖ *–£–∑–Ω–∞—Ç—å –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–ª—é—á–∞* - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∫–æ–≥–¥–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –≤–∞—à–µ–≥–æ –∫–ª—é—á–∞.\n"
        "üë§ *–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å* - –ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ –∏ –±–∞–ª–∞–Ω—Å–µ.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!"
    )

    button_view_profile = InlineKeyboardButton(text='üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data='view_profile')
    button_about_vpn = InlineKeyboardButton(text='üîí –û VPN', callback_data='about_vpn')
    button_feedback = InlineKeyboardButton(text='üìù –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å', callback_data='feedback')
    button_channel = InlineKeyboardButton(text='üì¢ –ù–∞—à –∫–∞–Ω–∞–ª', url=CHANNEL_URL)

    inline_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [button_view_profile],
        [button_about_vpn],
        [button_feedback],
        [button_channel]
    ])

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await callback_query.message.edit_text(
        welcome_text,
        parse_mode='Markdown',
        reply_markup=inline_keyboard
    )
    await callback_query.answer()

@router.callback_query(lambda c: c.data == 'feedback')
async def handle_feedback(callback_query: CallbackQuery, state: FSMContext):
    feedback_text = "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º, –µ—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º, –µ—Å—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. @pocomacho"

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    button_back = InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='back_to_menu')

    # –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    inline_keyboard_back = InlineKeyboardMarkup(inline_keyboard=[
        [button_back]
    ])

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    await callback_query.message.edit_text(
        feedback_text,
        parse_mode='Markdown',
        reply_markup=inline_keyboard_back  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    )

    await state.set_state(FeedbackState.waiting_for_feedback)
    await state.update_data(user_id=callback_query.from_user.id)
    await callback_query.answer()

@router.message(FeedbackState.waiting_for_feedback)
async def receive_feedback(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    user_id = user_data.get('user_id')

    feedback_message = (
        f"–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:\n\n"
        f"{message.text}"
    )
    
    try:
        await bot.send_message(ADMIN_ID, feedback_message)
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏, –µ—Å–ª–∏ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.")
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: {e}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
    
    await state.clear()

# –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç
@router.message(Command('start'))
async def cmd_start(message: Message):
    await start_command(message)