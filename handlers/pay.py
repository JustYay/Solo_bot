from aiogram import F, Router
from aiogram.types import CallbackQuery, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from config import CRYPTO_BOT_ENABLE, FREEKASSA_ENABLE, STARS_ENABLE, YOOKASSA_ENABLE
from database import get_trial
from handlers.start import send_welcome_message

router = Router()


@router.callback_query(F.data == "pay")
async def handle_pay(callback_query: CallbackQuery):
    await callback_query.message.delete()
    builder = InlineKeyboardBuilder()

    if YOOKASSA_ENABLE:
        builder.row(
            InlineKeyboardButton(
                text="üí≥ –Ø–ö–∞—Å—Å–∞: –±—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–≤–æ–¥",
                callback_data="pay_yookassa",
            )
        )
    if FREEKASSA_ENABLE:
        builder.row(
            InlineKeyboardButton(
                text="üåê FreeKassa: –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤",
                callback_data="pay_freekassa",
            )
        )
    if CRYPTO_BOT_ENABLE:
        builder.row(
            InlineKeyboardButton(
                text="üí∞ CryptoBot: –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞",
                callback_data="pay_cryptobot",
            )
        )
    if STARS_ENABLE:
        builder.row(
            InlineKeyboardButton(
                text="‚≠ê –û–ø–ª–∞—Ç–∞ –ó–≤–µ–∑–¥–∞–º–∏",
                callback_data="pay_stars",
            )
        )

    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data="view_profile")
    )

    await callback_query.message.answer(
        "üí∏ <b>–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:</b>\n\n"
        "‚Ä¢ –ë—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º\n"
        "‚Ä¢ –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ üöÄ",
        parse_mode="HTML",
        reply_markup=builder.as_markup(),
    )

    await callback_query.answer()


@router.callback_query(F.data == "back_to_menu")
async def handle_back_to_menu(callback_query: CallbackQuery):
    await callback_query.message.delete()
    trial_status = await get_trial(callback_query.from_user.id)
    await send_welcome_message(callback_query.from_user.id, trial_status)
    await callback_query.answer()
